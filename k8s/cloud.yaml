apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apache
  name: barter-webserver
  namespace: barter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apache
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
        - env:
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: userpassword
                  name: barter-secret
          image: gcr.io/pc-api-6479467557629758909-343/github_yes-soft-de_barter
          imagePullPolicy: Always
          name: php-apache
          ports:
            - containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /var/www/upload/image
              name: barter-pvc-sym-m
      volumes:
        - name: barter-pvc-sym-m
          persistentVolumeClaim:
            claimName: barter-pvc-sym-uploud
      tolerations:
      - key: "env"
        operator: "Equal"
        value: "dev"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  labels:
    run: barter-web-service
  name: barter-web-service
  namespace: barter
spec:
  clusterIP: 10.4.10.6
  externalTrafficPolicy: Cluster
  ports:
    - nodePort: 31502
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: apache
  sessionAffinity: None
  type: LoadBalancer
